{"version":3,"sources":["playcanvas-ar/playcanvas-ar.js"],"names":[],"mappings":"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","sourcesContent":["// playcanvas-ar.js\n/* jshint multistr: true */\n///////////////////////////////////////////////////////////////////////////////\n////////////////////////////////// AR CAMERA //////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\nvar ArCamera = pc.createScript('arCamera');\n\nArCamera.attributes.add('cameraCalibration', { \n    type: 'asset',\n    assetType: 'binary',\n    title: 'Calibration File',\n    description: 'Data file containing the calibration properties for the camera to be used'\n});\nArCamera.attributes.add('detectionMode', { \n    type: 'number', \n    enum: [\n        { 'Color Template': 0 },\n        { 'Mono Template': 1 },\n        { 'Matrix': 2 },\n        { 'Color Template and Matrix': 3 },\n        { 'Mono Template and Matrix': 4 }\n    ],\n    default: 0,\n    title: 'Detection Mode',\n    description: 'The pattern detection determines the method by which ARToolKit matches detected squares \\\n                  in the video image to marker templates and/or IDs. ARToolKit can match against pictorial \\\n                  \"template\" markers, whose pattern files are created with the mk_patt utility, in either \\\n                  colour or mono, and additionally can match against 2D-barcode-type \"matrix\" markers, which \\\n                  have an embedded marker ID. Two different two-pass modes are also available, in which a \\\n                  matrix-detection pass is made first, followed by a template-matching pass. Defaults to \\\n                  \"Color Template\".'\n});\nArCamera.attributes.add('matrixCodeType', { \n    type: 'number', \n    enum: [\n        { '3x3': 0 },\n        { '3x3 Parity 65': 1 },\n        { '3x3 Hamming 63': 2 },\n        { '4x4': 3 },\n        { '4x4 BCH 13_9_3': 4 },\n        { '4x4 BCH 13_5_5': 5 }\n    ],\n    default: 0,\n    title: 'Matrix Code Type',\n    description: 'Set the size and ECC algorithm to be used for matrix code (2D barcode) marker detection.\\n\\n \\\n                  When matrix-code (2D barcode) marker detection is enabled (see Detection Mode) \\\n                  then the size of the barcode pattern and the type of error checking and correction (ECC) \\\n                  with which the markers were produced can be set via this function.\\n\\n \\\n                  This setting is global to a given AR Camera; It is not possible to have two different matrix \\\n                  code types in use at once. Defaults to 3x3.'\n});\nArCamera.attributes.add('labelingMode', { \n    type: 'number',\n    enum: [\n        { 'White Region': 0 },\n        { 'Black Region': 1 }\n    ],\n    default: 1,\n    title: 'Labeling Mode',\n    description: 'Select between detection of black markers and white markers.\\n\\nARToolKit\\'s labeling \\\n                  algorithm can work with both black-bordered markers on a white background (\"Black Region\") \\\n                  or white-bordered markers on a black background (\"White Region\"). This property allows \\\n                  you to specify the type of markers to look for. Note that this does not affect the \\\n                  pattern-detection algorithm which works on the interior of the marker.'\n});\nArCamera.attributes.add('processingMode', { \n    type: 'number', \n    enum: [\n        { 'Frame': 0 },\n        { 'Field': 1 }\n    ],\n    default: 0,\n    title: 'Processing Mode',\n    description: 'When the image processing mode is \"Frame\", ARToolKit processes all pixels in each incoming \\\n                  image to locate markers. When the mode is \"Field\", ARToolKit processes pixels in only every \\\n                  second pixel row and column. This is useful both for handling images from interlaced video \\\n                  sources (where alternate lines are assembled from alternate fields and thus have one field \\\n                  time-difference, resulting in a \"comb\" effect) such as Digital Video cameras. The effective \\\n                  reduction by 75% in the pixels processed also has utility in accelerating tracking by \\\n                  effectively reducing the image size to one quarter size, at the cost of pose accuracy.'\n});\nArCamera.attributes.add('thresholdMode', { \n    type: 'number', \n    enum: [\n        { 'Manual': 0 },\n        { 'Auto Median': 1 },\n        { 'Auto Otsu': 2 },\n        { 'Auto Adaptive': 3 }\n    ],\n    default: 0,\n    title: 'Threshold Mode',\n    description: 'The thresholding mode to use. The standard ARToolKit options are available: Manual, Median, \\\n                  Otsu, Adaptive, Bracketing.'\n});\nArCamera.attributes.add('threshold', {\n    type: 'number',\n    min: 0,\n    max: 255,\n    precision: 0,\n    default: 100,\n    title: 'Threshold',\n    description: \"Sets the labeling threshhold value. The default value is 100.\\n\\nThe current threshold mode \\\n                  is not affected by the setting of this value. Typically, this property is used when the labeling \\\n                  threshold mode is 'Manual'.\\n\\nThe threshold value is not relevant if threshold mode is \\\n                  'Auto Adaptive'.\\n\\nBackground: The labeling threshold is the value which the AR library uses to \\\n                  differentiate between black and white portions of an ARToolKit marker. Since the actual brightness, \\\n                  contrast, and gamma of incoming images can vary signficantly between different cameras and lighting \\\n                  conditions, this value typically needs to be adjusted dynamically to a suitable midpoint between \\\n                  the observed values for black and white portions of the markers in the image.\"\n});\nArCamera.attributes.add('trackerResolution', {\n    type: 'number',\n    enum: [\n        { 'Full': 0 },\n        { 'Three Quarters': 1 },\n        { 'Half': 2 },\n        { 'Quarter': 3 }\n    ],\n    default: 0,\n    title: 'Tracker Resolution',\n    description: \"Controls the resolution of the tracker image. Each video frame is copied to the tracker image for \\\n                  marker detection. Reducing the tracker image resolution will speed up marker detection but will \\\n                  also make it less precise. For example, a video camera source may have a resolution of 640x480. \\\n                  The tracker image will have the following resolutions based on the selected option: 'Full': 640x480, \\\n                  'Three Quarters': 480x360, 'Half': 320x240, 'Quarter': 160x120.\"\n});\nArCamera.attributes.add('trackAlternateFrames', {\n    type: 'boolean',\n    default: false,\n    title: 'Track Alternate Frames',\n    description: 'If selected, tracking is only performed on every other update. This can increase lag in tracking but \\\n                  will reduce CPU load.'\n});\nArCamera.attributes.add('debugOverlay', {\n    type: 'boolean',\n    default: false,\n    title: 'Debug Overlay',\n    description: 'Enables or disables the debug overlay. When enabled, a black and white debug image is generated during \\\n                  marker detection. The debug image is useful for visualizing the binarization process and choosing a \\\n                  threshold value. The image is displayed as an overlay on top of the 3D scene.'\n});\nArCamera.attributes.add('videoTexture', {\n    type: 'boolean',\n    default: false,\n    title: 'Video Texture',\n    description: 'Streams the camera feed to a video texture if enabled. Otherwise, a video DOM element is used.'\n});\n\nArCamera.prototype.useDom = function () {\n    if  (this.entity.model) {\n        this.entity.removeComponent('model');\n    }\n\n    // Create a video element that is full tab and centered\n    // CCS taken from: https://slicejack.com/fullscreen-html5-video-background-css/\n    var style = this.video.style;\n    style.position = 'absolute';\n    style.top = '50%';\n    style.left = '50%';\n    style.width = 'auto';\n    style.height = 'auto';\n    style.minWidth = '100%';\n    style.minHeight = '100%';\n    style.backgroundSize = 'cover';\n    style.overflow = 'hidden';\n    style.transform = 'translate(-50%, -50%)';\n    style.zIndex = '0';\n    document.body.appendChild(this.video);\n\n    // Z-order for page is:\n    //   0: Video DOM element\n    //   1: PlayCanvas canvas element\n    //   2: ARToolkit debug canvas\n    this.app.graphicsDevice.canvas.style.zIndex = '1';\n};\n\n// MEGA HACK FOR IOS\n// The video pauses when exiting fullscreen if the video element is not added to the DOM\nArCamera.prototype.addVideoToDom = function () {\n    var style = this.video.style;\n    style.position = 'absolute';\n    style.width = '1%';\n    style.height = '1%';\n\n    document.body.appendChild(this.video);\n};\n\nArCamera.prototype.useVideoTexture = function () {\n    // If the video is already in the DOM, remove it\n    if (this.video.parentElement)\n        document.body.removeChild(this.video);\n\n    var device = this.app.graphicsDevice;\n\n    // Create a texture to receive video frames. 888 format seems to achieve best performance.\n    this.texture = new pc.Texture(device, {\n        format: pc.PIXELFORMAT_R8_G8_B8\n    });\n    // Apply a linear filter to avoid pixelation of low resolution video\n    this.texture.magFilter = pc.FILTER_LINEAR;\n    this.texture.minFilter = pc.FILTER_LINEAR;\n    this.texture.setSource(this.video);\n\n    var shader = new pc.Shader(device, {\n        attributes: {\n            aPosition: pc.SEMANTIC_POSITION\n        },\n        vshader: [\n            \"attribute vec2 aPosition;\",\n            \"\",\n            \"uniform vec2 uCanvasSize;\",\n            \"uniform vec2 uVideoSize;\",\n            \"\",\n            \"varying vec2 vUv0;\",\n            \"\",\n            \"void main(void)\",\n            \"{\",\n            \"    vUv0 = aPosition;\",\n            \"    float vw = uVideoSize.x;\",\n            \"    float vh = uVideoSize.y;\",\n            \"    float va = uVideoSize.x / uVideoSize.y;\",\n            \"    float cw = uCanvasSize.x;\",\n            \"    float ch = uCanvasSize.y;\",\n            \"    float ca = uCanvasSize.x / uCanvasSize.y;\",\n            \"    if (ca < va)\",\n            \"    {\",\n            \"        vUv0.x *= ca / va;\",\n            \"    }\",\n            \"    else\",\n            \"    {\",\n            \"        vUv0.y *= va / ca;\",\n            \"    }\",\n            \"    vUv0 *= 0.5;\",\n            \"    vUv0 += 0.5;\",\n            \"    gl_Position = vec4(aPosition, 1.0, 1.0);\",\n            \"}\"\n        ].join(\"\\n\"),\n        fshader: [\n            \"precision \" + device.precision + \" float;\",\n            \"\",\n            \"varying vec2 vUv0;\",\n            \"\",\n            \"uniform sampler2D uVideoMap;\",\n            \"\",\n            \"void main(void)\",\n            \"{\",\n            \"    gl_FragColor = texture2D(uVideoMap, vUv0);\",\n            \"}\"\n        ].join(\"\\n\")\n    });\n\n    // Create the vertex format\n    var vertexFormat = new pc.VertexFormat(device, [\n        { \n            semantic: pc.SEMANTIC_POSITION,\n            components: 2,\n            type: pc.ELEMENTTYPE_FLOAT32\n        }\n    ]);\n\n    // Create a vertex buffer\n    var vertexBuffer = new pc.VertexBuffer(device, vertexFormat, 4);\n\n    // Fill the vertex buffer\n    var vertexData = vertexBuffer.lock();\n    var vertexDataF32 = new Float32Array(vertexData);\n    vertexDataF32.set([-1, -1, 1, -1, -1, 1, 1, 1]);\n    vertexBuffer.unlock();\n    \n    var mesh = new pc.Mesh();\n    mesh.vertexBuffer = vertexBuffer;\n    mesh.primitive[0] = {\n        type: pc.PRIMITIVE_TRISTRIP,\n        base: 0,\n        count: 4,\n        indexed: false\n    };\n\n    var material = new pc.Material();\n    material.shader = shader;\n    material.depthTest = false;\n    material.depthWrite = false;\n    material.setParameter('uVideoMap', this.texture);\n    var cw = device.width;\n    var ch = device.height;\n    var vw = this.video.videoWidth;\n    var vh = this.video.videoHeight;\n    material.setParameter('uVideoSize', new Float32Array([vw, vh]));\n    material.setParameter('uCanvasSize', new Float32Array([cw, ch]));\n\n    var node = new pc.GraphNode();\n\n    var meshInstance = new pc.MeshInstance(node, mesh, material);\n\n    var model = new pc.Model();\n    model.graph = node;\n    model.meshInstances = [ meshInstance ];\n\n    this.entity.addComponent('model', {\n        type: 'asset',\n        castShadows: false\n    });\n    this.entity.model.model = model;\n};\n\nArCamera.prototype.onResize = function () {\n    if (!this.arController) return;\n    \n    var device = this.app.graphicsDevice;\n    var cw = device.width;\n    var ch = device.height;\n    var vw = this.video.videoWidth;\n    var vh = this.video.videoHeight;\n\n    // Resize the video texture\n    if (this.entity.model && this.entity.model.model) {\n        var material = this.entity.model.model.meshInstances[0].material;\n        material.setParameter('uVideoSize', new Float32Array([vw, vh]));\n        material.setParameter('uCanvasSize', new Float32Array([cw, ch]));\n    }\n\n    // Resize the 3D camera frustum (via the fov)\n    var camMatrix = this.arController.getCameraMatrix();\n    var fovy = 2 * Math.atan(1 / camMatrix[5]) * 180 / Math.PI;\n\n    this.arController.orientation = (vw < vh) ? 'portrait' : 'landscape';\n    if (vw < vh) {\n        this.entity.camera.fov = Math.abs(fovy) * (vh / vw);\n    } else {\n        if (cw / ch > vw / vh) {\n            // Video Y FOV is limited so we must limit 3D camera FOV to match\n            this.entity.camera.fov = Math.abs(fovy) * (vw / vh) / (cw / ch);\n        } else {\n            // Video Y FOV is limited so we must limit 3D camera FOV to match\n            this.entity.camera.fov = Math.abs(fovy);\n        }\n    }\n};\n\nArCamera.prototype.startVideo = function () {\n    if (this.videoTexture) {\n        this.useVideoTexture();\n\n        // NASTY NASTY HACK\n        if (pc.platform.ios)\n            this.addVideoToDom();\n    } else {\n        this.useDom();\n    }\n};\n\nArCamera.prototype._setDebugMode = function (mode) {\n    if (this.arController) {\n        this.arController.setDebugMode(mode);\n\n        var canvas = this.arController.canvas;\n        if (mode) {\n            canvas.style.position = 'absolute';\n            canvas.style.zIndex = '2';\n            document.body.appendChild(canvas);\n\n            this.arController._bwpointer = this.arController.getProcessingImage();\n        } else {\n            if (canvas.parentElement) {\n                document.body.removeChild(canvas);\n            }\n\n            this.arController._bwpointer = null;\n        }\n    }\n};\n\nArCamera.prototype._setImageProcMode = function (procMode) {\n    if (this.arController) {\n        switch (procMode) {\n            case 0:\n                this.arController.setImageProcMode(artoolkit.AR_IMAGE_PROC_FRAME_IMAGE);\n                break;\n            case 1:\n                this.arController.setImageProcMode(artoolkit.AR_IMAGE_PROC_FIELD_IMAGE);\n                break;\n            default:\n                console.error(\"ERROR: \" + procMode + \" is an invalid image processing mode.\");\n                break;\n        }\n    }\n};\n\nArCamera.prototype._setLabelingMode = function (labelingMode) {\n    if (this.arController) {\n        switch (labelingMode) {\n            case 0:\n                this.arController.setLabelingMode(artoolkit.AR_LABELING_WHITE_REGION);\n                break;\n            case 1:\n                this.arController.setLabelingMode(artoolkit.AR_LABELING_BLACK_REGION);\n                break;\n            default:\n                console.error(\"ERROR: \" + labelingMode + \" is an invalid labeling mode.\");\n                break;\n        }\n    }\n};\n\nArCamera.prototype._setMatrixCodeType = function (matrixCodeType) {\n    if (this.arController) {\n        switch (matrixCodeType) {\n            case 0:\n                this.arController.setMatrixCodeType(artoolkit.AR_MATRIX_CODE_3x3);\n                break;\n            case 1:\n                this.arController.setMatrixCodeType(artoolkit.AR_MATRIX_CODE_3x3_HAMMING63);\n                break;\n            case 2:\n                this.arController.setMatrixCodeType(artoolkit.AR_MATRIX_CODE_3x3_PARITY65);\n                break;\n            case 3:\n                this.arController.setMatrixCodeType(artoolkit.AR_MATRIX_CODE_4x4);\n                break;\n            case 4:\n                this.arController.setMatrixCodeType(artoolkit.AR_MATRIX_CODE_4x4_BCH_13_9_3);\n                break;\n            case 5:\n                this.arController.setMatrixCodeType(artoolkit.AR_MATRIX_CODE_4x4_BCH_13_5_5);\n                break;\n            default:\n                console.error(\"ERROR: \" + matrixCodeType + \" is an invalid matrix code type.\");\n                break;\n        }\n    }\n};\n\nArCamera.prototype._setPatternDetectionMode = function (detectionMode) {\n    if (this.arController) {\n        switch (detectionMode) {\n            case 0:\n                this.arController.setPatternDetectionMode(artoolkit.AR_TEMPLATE_MATCHING_COLOR);\n                break;\n            case 1:\n                this.arController.setPatternDetectionMode(artoolkit.AR_TEMPLATE_MATCHING_MONO);\n                break;\n            case 2:\n                this.arController.setPatternDetectionMode(artoolkit.AR_MATRIX_CODE_DETECTION);\n                break;\n            case 3:\n                this.arController.setPatternDetectionMode(artoolkit.AR_TEMPLATE_MATCHING_COLOR_AND_MATRIX);\n                break;\n            case 4:\n                this.arController.setPatternDetectionMode(artoolkit.AR_TEMPLATE_MATCHING_MONO_AND_MATRIX);\n                break;\n            default:\n                console.error(\"ERROR: \" + detectionMode + \" is an invalid pattern detection mode.\");\n                break;\n        }\n    }\n};\n\nArCamera.prototype._setThreshold = function (theshold) {\n    if (this.arController) {\n        // Clamp to 0..255 and round down to nearest integer\n        theshold = Math.floor(Math.min(Math.max(theshold, 0), 255));\n        this.arController.setThreshold(theshold);\n    }\n};\n\nArCamera.prototype._setThresholdMode = function (thresholdMode) {\n    if (this.arController) {\n        switch (thresholdMode) {\n            case 0:\n                this.arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_MANUAL);\n                break;\n            case 1:\n                this.arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_AUTO_MEDIAN);\n                break;\n            case 2:\n                this.arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_AUTO_OTSU);\n                break;\n            case 3:\n                this.arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_AUTO_ADAPTIVE);\n                break;\n            default:\n                console.error(\"ERROR: \" + thresholdMode + \" is an invalid threshold mode.\");\n                break;\n        }\n    }\n};\n\nArCamera.prototype._createArController = function (w, h, url) {\n    // Load the camera calibration data\n    this.cameraParam = new ARCameraParam(url, function () {\n        this.arController = new ARController(w * (1 - this.trackerResolution / 4), h * (1 - this.trackerResolution / 4), this.cameraParam);\n\n        // Disable spammy console logging from ARToolkit. See the following for the origin of 4:\n        // https://github.com/artoolkit/artoolkit5/blob/master/include/AR/config.h.in#L214\n        this.arController.setLogLevel(4);\n\n        this.arController.setProjectionNearPlane(this.entity.camera.nearClip);\n        this.arController.setProjectionFarPlane(this.entity.camera.farClip);\n        this._setDebugMode(this.debugOverlay);\n        this._setImageProcMode(this.processingMode);\n        this._setLabelingMode(this.labelingMode);\n        this._setMatrixCodeType(this.matrixCodeType);\n        this._setPatternDetectionMode(this.detectionMode);\n        this._setThreshold(this.threshold);\n        this._setThresholdMode(this.thresholdMode);\n\n        this.onResize();\n\n        // Notify all markers that tracking is initialized\n        this.app.fire('trackinginitialized', this.arController);\n    }.bind(this));\n};\n\nArCamera.prototype._destroyArController = function () {\n    // Tear down tracking resources\n    if (this.arController) {\n        this.arController.dispose();\n        this.arController = null;\n    }\n\n    if (this.cameraParam) {\n        this.cameraParam.dispose();\n        this.cameraParam = null;\n    }\n};\n\nArCamera.prototype.startTracking = function () {\n    var url = this.cameraCalibration.getFileUrl();\n    this._createArController(this.video.videoWidth, this.video.videoHeight, url);\n};\n\nArCamera.prototype.stopTracking = function () {\n    this._destroyArController();\n};\n\nArCamera.prototype.supportsAr = function () {\n    return (navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n};\n\nArCamera.prototype.enterAr = function (success, error) {\n    if (!this.cameraCalibration) {\n        console.error('ERROR: No camera calibration file set on your arCamera script. Try assigning camera_para.dat.');\n    }\n\n    var self = this;\n\n    var constraints = {\n        audio: false,\n        video: {\n            // Prefer the rear camera\n            facingMode: \"environment\"\n        }\n    };\n\n    navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n        self.videoPlaying = false;\n\n        // Create the video element to receive the camera stream\n        var video = document.createElement('video');\n\n        video.setAttribute('autoplay', '');\n        video.setAttribute('muted', '');\n        // This is critical for iOS or the video initially goes fullscreen\n        video.setAttribute('playsinline', '');\n        video.srcObject = stream;\n\n        self.video = video;\n\n        // Check for both video and canvas resizing\n        // Changing screen orientation on mobile can change both!\n        self.app.graphicsDevice.on('resizecanvas', function () {\n            self.onResize();\n        });\n        video.addEventListener('resize', function () {\n            self.onResize();\n        });\n\n        // Only play the video when it's actually ready\n        video.addEventListener('canplay', function () {\n            if (!self.videoPlaying) {\n                self.startVideo();\n                self.startTracking();\n                self.videoPlaying = true;\n                if (success) success();\n            }\n        });\n\n        // iOS needs a user action to start the video\n        if (pc.platform.mobile) {\n            window.addEventListener('touchstart', function (e) {\n                e.preventDefault();\n                if (!self.videoPlaying) {\n                    self.startVideo();\n                    self.startTracking();\n                    self.videoPlaying = true;\n                    if (success) success();\n                }\n            });\n        }\n    }).catch(function (e) {\n        if (error) error(\"ERROR: Unable to acquire camera stream\");\n    });\n};\n\nArCamera.prototype.exitAr = function () {\n    // Tear down video resources\n    if (this.video) {\n        this.video.stop();\n        if (this.video.parentElement) {\n            document.body.removeChild(this.video);\n        }\n    }\n};\n\n// initialize code called once per entity\nArCamera.prototype.initialize = function () {\n    // All markers move with respect to an untransformed camera\n    // so ignore whatever transformation has been set up in the Editor\n    this.entity.setEulerAngles(0, 0, 0);\n    this.entity.setPosition(0, 0, 0);\n    this.entity.setLocalScale(1, 1, 1);\n\n    if (this.cameraCalibration) {\n        if (this.supportsAr()) {\n            this.enterAr();\n        }\n    } else {\n        console.warn(\"WARNING: Unable to enter AR until a valid camera calibration asset has been set.\");\n    }\n\n    //////////////////////////////\n    // Handle attribute changes //\n    //////////////////////////////\n    this.on('attr:cameraCalibration', function (value, prev) {\n        if (!this.arController && value) {\n            if (this.supportsAr()) {\n                this.enterAr();\n            }\n        }\n    });\n\n    this.on('attr:debugOverlay', function (value, prev) {\n        this._setDebugMode(value);\n    });\n\n    this.on('attr:detectionMode', function (value, prev) {\n        this._setPatternDetectionMode(value);\n    });\n\n    this.on('attr:labelingMode', function (value, prev) {\n        this._setLabelingMode(value);\n    });\n\n    this.on('attr:matrixCodeType', function (value, prev) {\n        this._setMatrixCodeType(value);\n    });\n\n    this.on('attr:processingMode', function (value, prev) {\n        this._setImageProcMode(value);\n    });\n\n    this.on('attr:threshold', function (value, prev) {\n        this._setThreshold(value);\n    });\n\n    this.on('attr:thresholdMode', function (value, prev) {\n        this._setThresholdMode(value);\n    });\n\n    this.on('attr:trackerResolution', function (value, prev) {\n        // ARToolkit doesn't seem to support recreation of ArControllers\n        // this.stopTracking();\n        // this.startTrackinng();\n    });\n\n    this.on('attr:videoTexture', function (value, prev) {\n        if (value) {\n            this.useVideoTexture();\n        } else {\n            this.useDom();\n        }\n    });\n\n    this.process = true;\n};\n\n// update code called every frame\nArCamera.prototype.update = function(dt) {\n    if (this.arController) {\n        // Update the tracking\n        if (this.trackAlternateFrames) {\n            if (this.process) {\n                this.arController.process(this.video);\n            }\n            this.process = !this.process;\n       } else {\n            this.arController.process(this.video);\n       }\n\n        // If we're displaying video via a texture, copy the video frame into the texture\n        if (this.videoTexture && this.texture) {\n            this.texture.upload();\n        }\n    }\n};\n\n\n///////////////////////////////////////////////////////////////////////////////\n////////////////////////////////// AR MARKER //////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\nvar ArMarker = pc.createScript('arMarker');\n\nArMarker.attributes.add('pattern', {\n    type: 'asset',\n    assetType: 'binary',\n    title: 'Pattern',\n    description: 'The marker pattern to track. This can be the Hiro or Kanji markers or a marker you have generated yourself.'\n});\nArMarker.attributes.add('matrixId', {\n    type: 'number',\n    default: 0,\n    title: 'Matrix ID',\n    description: 'The matrix ID. If no pattern template is set, the marker is a matrix. Defaults to 0.'\n});\nArMarker.attributes.add('width', {\n    type: 'number',\n    default: 1,\n    title: 'Width',\n    description: 'The width of the marker. Defaults to 1.'\n});\nArMarker.attributes.add('deactivationTime', {\n    type: 'number',\n    default: 0.25,\n    title: 'Deactivation Time',\n    description: 'The time in seconds from when a marker is lost before its children are deactivated. Defaults to 0.25.'\n});\nArMarker.attributes.add('shadow', {\n    type: 'boolean',\n    default: true,\n    title: 'Shadow',\n    description: 'Enable this option to generate shadows in the plane of the marker that blend with the camera feed. Defaults to true.'\n});\nArMarker.attributes.add('shadowStrength', {\n    type: 'number',\n    default: 0.5,\n    min: 0,\n    max: 1,\n    title: 'Shadow Strength',\n    description: 'Control the strength of the shadow. 1 is full strength and 0 is disabled. Defaults to 0.5.'\n});\n\nArMarker.shadowMaterial = null;\n\nArMarker.prototype.hideChildren = function () {\n    for (var i = 0; i < this.entity.children.length; i++) {\n        this.entity.children[i].enabled = false;\n    }\n};\n\nArMarker.prototype.showChildren = function () {\n    for (var i = 0; i < this.entity.children.length; i++) {\n        this.entity.children[i].enabled = true;\n    }\n};\n\nArMarker.prototype.createShadow = function () {\n    if (!ArMarker.shadowMaterial) {\n        var material = new pc.StandardMaterial();\n        material.chunks.lightDiffuseLambertPS = \"float getLightDiffuse() { return 1.0; }\";\n        material.chunks.outputAlphaPS = \"gl_FragColor.a = dAlpha * (1.0 - dDiffuseLight.r);\";\n        material.diffuse.set(0, 0, 0);\n        material.specular.set(0, 0, 0);\n        material.emissive.set(0, 0, 0);\n        material.opacity = this.shadowStrength;\n        material.blendType = pc.BLEND_NORMAL;\n        material.useGammaTonemap = false;\n        material.useFog = false;\n        material.useSkybox = false;\n        material.depthWrite = false;\n        material.update();\n        \n        ArMarker.shadowMaterial = material;\n    }\n    \n    this.shadowEntity = new pc.Entity('Shadow');\n    this.shadowEntity.addComponent('model', {\n        type: 'plane',\n        castShadows: false\n    });\n    this.shadowEntity.model.material = ArMarker.shadowMaterial;\n    this.shadowEntity.setLocalScale(5, 5, 5);\n\n    this.entity.addChild(this.shadowEntity);\n};\n\nArMarker.prototype.destroyShadow = function () {\n    if (this.shadowEntity) {\n        this.entity.removeChild(this.shadowEntity);\n        this.shadowEntity.destroy();\n        this.shadowEntity = null;\n    }\n};\n\n// initialize code called once per entity\nArMarker.prototype.initialize = function () {\n    var self = this;\n    var entity = this.entity;\n\n    this.active = false;\n    this.markerId = -1;\n    this.markerMatrix = new pc.Mat4();\n    this.portraitRot = new pc.Mat4();\n    this.portraitRot.setFromEulerAngles(180, 0, 90);\n    this.portraitRot.invert();\n    this.landscapeRot = new pc.Mat4();\n    this.landscapeRot.setFromEulerAngles(180, 0, 0);\n    this.landscapeRot.invert();\n    this.finalMatrix = new pc.Mat4();\n\n    this.lastSeen = -1;\n\n    this.app.on('trackinginitialized', function (arController) {\n        if (self.pattern) {\n            arController.loadMarker(self.pattern.getFileUrl(), function (markerId) {\n                self.markerId = markerId;\n            });\n        }\n        arController.addEventListener('getMarker', function (ev) {\n            var data = ev.data;\n            var type = data.type;\n            var marker = data.marker;\n            if ((self.pattern && type === artoolkit.PATTERN_MARKER && marker.idPatt === self.markerId) ||\n                (!self.pattern && type === artoolkit.BARCODE_MARKER && marker.idMatrix === self.matrixId)) {\n                // Set the marker entity position and rotation from ARToolkit\n                self.markerMatrix.data.set(data.matrix);\n                if (arController.orientation === 'portrait') {\n                    self.finalMatrix.mul2(self.portraitRot, self.markerMatrix);\n                } else {\n                    self.finalMatrix.mul2(self.landscapeRot, self.markerMatrix);\n                }\n                entity.setPosition(self.finalMatrix.getTranslation());\n                entity.setEulerAngles(self.finalMatrix.getEulerAngles());\n\n                if (self.width > 0)\n                    entity.setLocalScale(1 / self.width, 1 / self.width, 1 / self.width);\n\n                // Z points upwards from an ARToolkit marker so rotate it so Y is up\n                entity.rotateLocal(90, 0, 0);\n\n                self.lastSeen = Date.now();\n                if (!self.active) {\n                    self.showChildren();\n                    self.active = true;\n                }\n            }\n        });\n    });\n\n    if (this.shadow) {\n        this.createShadow();\n    }\n\n    //////////////////////////////\n    // Handle attribute changes //\n    //////////////////////////////\n    this.on('attr:shadow', function (value, prev) {\n        if (value)\n            this.createShadow();\n        else\n            this.destroyShadow();\n    });\n\n    this.on('attr:shadowStrength', function (value, prev) {\n        if (ArMarker.shadowMaterial) {\n            ArMarker.shadowMaterial.opacity = this.shadowStrength;\n            ArMarker.shadowMaterial.update();\n        }\n    });\n\n    this.hideChildren();\n};\n\n// update code called every frame\nArMarker.prototype.update = function(dt) {\n    if (this.active) {\n        var timeSinceLastSeen = (Date.now() - this.lastSeen) / 1000;\n\n        if (timeSinceLastSeen > this.deactivationTime) {\n            this.hideChildren();\n            this.active = false;\n        }\n    }\n};\n\n"]}